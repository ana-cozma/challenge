name: Build and Pack

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      imageName: ${{ secrets.ECR_REGISTRY_URL_DEV}}/${{ inputs.imageName }}
      releaseName: ${{ inputs.releaseName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ecr-dev-eu-west-1
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Install helm cli
        uses: azure/setup-helm@v1
        with:
          version: '3.8.0'

      - name: Package helm chart
        run: |
          helm package helm/mywebapp

      - name: Login to ECR
        run: |
          aws ecr get-login-password \
          --region eu-west-1 | helm registry login \
          --username AWS \
          --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com
      
      - name: Push helm chart to ECR
        run: |
          package=$(ls *.tgz)
          helm push $package oci://${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.region.amazonaws.com/
